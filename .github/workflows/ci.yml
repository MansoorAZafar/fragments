# .github/workflows/ci.yml

# Continuous Integration (CI) Workflow
name: ci

# this workflow will run whenever we push commits to the main branch, or
# whenever there's a PR to the main branch
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  lint:
    # Giving the job a name, will show-up in GitHub Actions web UI
    name: ESLint
    # Run this on a Linux (Ubuntu) VM, we will deploy on Linux
    runs-on: ubuntu-latest
    # Run these steps one after another, if fail, stop process
    steps:
      - name: Check out code
        uses: actions/checkout@v4

        # https://github.com/actions/setup-node
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          # Use node LTS https://github.com/actions/setup-node#supported-version-syntax
          node-version: 'lts/*'
          # Cache npm dependencies so they don't have to be downloaded next time - https://github.com/actions/setup-node#caching-packages-dependencies
          cache: 'npm'

      - name: Install node dependencies
        # Use `ci` vs. `install`, see https://docs.npmjs.com/cli/v8/commands/npm-ci
        run: npm ci

      - name: Run ESLint
        run: npm run lint
    
  # Lint our Dockerfile using Hadolint
  dockerfile-lint:
    name: Dockerfile Lint
    runs-on: ubuntu-latest
    steps:
      # https://github.com/marketplace/actions/hadolint-action
      - uses: actions/checkout@v4
      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Install node dependencies and run Tests
        # There are two ways we could do this:
        #
        # 1. Call `npm ci` followed by `npm test` like so (NOTE: the use of | and -):
        # run: |
        # - npm install
        # - npm test
        #
        # 2. Use `install-ci-test` to do it in a single command, see https://docs.npmjs.com/cli/v8/commands/npm-install-ci-test
        # run: npm install-ci-test
        run: npm install-ci-test
